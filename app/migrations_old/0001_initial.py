# Generated by Django 4.2.6 on 2023-11-27 21:03

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('enr', models.IntegerField()),
                ('code', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=255)),
                ('male', models.IntegerField()),
                ('female', models.IntegerField()),
                ('total', models.IntegerField()),
                ('Total', models.CharField(max_length=255)),
                ('accessible', models.CharField(max_length=255)),
                ('date_creation', models.CharField(max_length=255)),
                ('density', models.CharField(max_length=255)),
                ('aera', models.CharField(max_length=255)),
                ('nbr_Region', models.CharField(max_length=255)),
                ('nbr_Departement', models.CharField(max_length=255)),
                ('nbr_Commune', models.CharField(max_length=255)),
                ('nbr_Localite', models.CharField(max_length=255)),
                ('date_Independance', models.CharField(max_length=255)),
                ('date_Reunification', models.CharField(max_length=255)),
                ('date_Unification', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('enr', models.IntegerField()),
                ('Code_Commune', models.CharField(max_length=255)),
                ('Code_Localite', models.CharField(max_length=255)),
                ('Libelle', models.CharField(max_length=255)),
                ('MASCULIN', models.CharField(max_length=255)),
                ('FEMININ', models.CharField(max_length=255)),
                ('TOTAL', models.CharField(max_length=255)),
                ('Chefferie', models.CharField(max_length=255)),
                ('PNombreMenage', models.CharField(max_length=255)),
                ('PHomme', models.CharField(max_length=255)),
                ('PFemme', models.CharField(max_length=255)),
                ('PNombrePersHandicape', models.CharField(max_length=255)),
                ('PEnfants_5ans', models.CharField(max_length=255)),
                ('PEnfants_15ans', models.CharField(max_length=255)),
                ('PPopulations', models.CharField(max_length=255)),
                ('IEEcoleMaternelle', models.CharField(max_length=255)),
                ('IEEcolePrimaire', models.CharField(max_length=255)),
                ('IEEColeSecondaire', models.CharField(max_length=255)),
                ('IEEColeTechnique', models.CharField(max_length=255)),
                ('IHForage', models.CharField(max_length=255)),
                ('IHPuits', models.CharField(max_length=255)),
                ('IHAdductionEau', models.CharField(max_length=255)),
                ('IHAutres', models.CharField(max_length=255)),
                ('IHAutresDetails', models.CharField(max_length=255)),
                ('ICSCSI', models.CharField(max_length=255)),
                ('ICSCMA', models.CharField(max_length=255)),
                ('ICSHopital', models.CharField(max_length=255)),
                ('ICSPrivee', models.CharField(max_length=255)),
                ('ICSAutres', models.CharField(max_length=255)),
                ('ICSAutresDetails', models.CharField(max_length=255)),
                ('ISEPFoyers', models.CharField(max_length=255)),
                ('ISEPCentreFemme', models.CharField(max_length=255)),
                ('ISEPCentreMultifonctionnel', models.CharField(max_length=255)),
                ('ISEPCentreSociaux', models.CharField(max_length=255)),
                ('ISEPAutres', models.CharField(max_length=255)),
                ('ISEPAutresDetails', models.CharField(max_length=255)),
                ('EPMMagasins', models.CharField(max_length=255)),
                ('EPMMarches', models.CharField(max_length=255)),
                ('EPMAbbatoir', models.CharField(max_length=255)),
                ('EPMGareRoutiere', models.CharField(max_length=255)),
                ('EPMParcaBetail', models.CharField(max_length=255)),
                ('ACElectrification', models.CharField(max_length=255)),
                ('ACTelephone', models.CharField(max_length=255)),
                ('AVRouteBitumee', models.CharField(max_length=255)),
                ('AVRouteEnTerreAmenage', models.CharField(max_length=255)),
                ('AVPiste', models.CharField(max_length=255)),
                ('ERAccessibleTouteSaison', models.CharField(max_length=255)),
                ('ERInaccessibleEnSaisonDePluie', models.CharField(max_length=255)),
                ('ERInaccessibleEnTouteSaison', models.CharField(max_length=255)),
                ('ONombreQuartier', models.CharField(max_length=255)),
                ('OExistenceComiteDeveloppement', models.CharField(max_length=255)),
                ('Accessible', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PaysageUrbain',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('enr', models.IntegerField()),
                ('UnitePaysage', models.CharField(max_length=255)),
                ('ID_PUGE', models.CharField(max_length=255)),
                ('IDZone', models.CharField(max_length=255)),
                ('Utilisation', models.TextField()),
                ('Potentialite', models.TextField()),
                ('Utilisateur', models.TextField()),
                ('Probleme', models.TextField()),
                ('Causes', models.TextField()),
                ('Consequences', models.TextField()),
                ('Solutions', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RessourceZone',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('enr', models.IntegerField()),
                ('IDPRessources', models.CharField(max_length=255)),
                ('IDZone', models.CharField(max_length=255)),
                ('Ressource', models.CharField(max_length=255)),
                ('Caracteristique', models.CharField(max_length=255)),
                ('UtilisationActuelle', models.CharField(max_length=255)),
                ('Potentialite', models.CharField(max_length=255)),
                ('Contrainte', models.CharField(max_length=255)),
                ('ActionaMener', models.CharField(max_length=255)),
                ('AccesControle', models.CharField(max_length=255)),
                ('Archive', models.CharField(max_length=255)),
                ('IDSource', models.CharField(max_length=255)),
                ('MiseAJour', models.CharField(max_length=255)),
                ('CoordX', models.CharField(max_length=255)),
                ('CoordY', models.CharField(max_length=255)),
                ('CoordZ', models.CharField(max_length=255)),
                ('ModeGestion', models.CharField(max_length=255)),
                ('Tendances', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('enr', models.IntegerField()),
                ('IDZone', models.CharField(max_length=255)),
                ('Code_Pays', models.CharField(max_length=255)),
                ('Pays', models.CharField(max_length=255)),
                ('Code_Region', models.CharField(max_length=255)),
                ('Region', models.CharField(max_length=255)),
                ('Code_Departement', models.CharField(max_length=255)),
                ('Departement', models.CharField(max_length=255)),
                ('Code_Commune', models.CharField(max_length=255)),
                ('Commune', models.CharField(max_length=255)),
                ('Code_Localite', models.CharField(max_length=255)),
                ('Localite', models.CharField(max_length=255)),
                ('Zone', models.CharField(max_length=255)),
                ('ZNiveau', models.CharField(max_length=255)),
                ('NbRegion', models.CharField(max_length=255)),
                ('NbDepartement', models.CharField(max_length=255)),
                ('NbCommune', models.CharField(max_length=255)),
                ('NbLocalite', models.CharField(max_length=255)),
                ('Superficie', models.CharField(max_length=255)),
                ('Densite', models.CharField(max_length=255)),
                ('Adresse', models.CharField(max_length=255)),
                ('Date', models.CharField(max_length=255)),
                ('EMail', models.CharField(max_length=255)),
                ('Telephone', models.CharField(max_length=255)),
                ('Icone', models.CharField(max_length=255)),
                ('Image', models.CharField(max_length=255)),
                ('Masculin', models.CharField(max_length=255)),
                ('Feminin', models.CharField(max_length=255)),
                ('Total', models.CharField(max_length=255)),
                ('Accessible', models.CharField(max_length=255)),
                ('DelimitationJSON', models.CharField(max_length=255)),
                ('Limites', models.CharField(max_length=255)),
                ('Localisation', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
